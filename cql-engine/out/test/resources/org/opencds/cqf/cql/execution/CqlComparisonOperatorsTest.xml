<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="ComparisonOperator" version="1"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
   </usings>
   <statements>
      <def name="Patient" context="Population">
         <expression xsi:type="Null"/>
      </def>
      <def name="BetweenIntTrue" context="Population" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="GreaterOrEqual">
               <operand valueType="t:Integer" value="4" xsi:type="Literal"/>
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="LessOrEqual">
               <operand valueType="t:Integer" value="4" xsi:type="Literal"/>
               <operand valueType="t:Integer" value="6" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleEqTrueTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqTrueFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqFalseFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqFalseTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqNullNull" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Null"/>
            <operand xsi:type="Null"/>
         </expression>
      </def>
      <def name="SimpleEqNullTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand asType="t:Boolean" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
            </operand>
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqInt1Int1" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqInt1Int2" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqStringAStringA" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqStringAStringB" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqFloat1Float1" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqFloat1Float2" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqFloat1Int1" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SimpleEqFloat1Int2" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="QuantityEqCM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand value="1" unit="cm" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityEqCM1M01" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand value="1" unit="cm" xsi:type="Quantity"/>
            <operand value="0.01" unit="m" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityEqDiffPrecision" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand value="2.0" unit="cm" xsi:type="Quantity"/>
            <operand value="2.00" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="TupleEqJohnJohn" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TupleEqJohnJane" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="2" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="Jane" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TupleEqJohn1John2" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="2" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TupleEqDateTimeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="dateId">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Date">
                  <value xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="dateId">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Date">
                  <value xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TupleEqDateTimeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="dateId">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Date">
                  <value xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="dateId">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Date">
                  <value xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TupleEqTimeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="timeId">
                  <value valueType="t:Integer" value="55" xsi:type="Literal"/>
               </element>
               <element name="TheTime">
                  <value xsi:type="Time">
                     <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="541" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="timeId">
                  <value valueType="t:Integer" value="55" xsi:type="Literal"/>
               </element>
               <element name="TheTime">
                  <value xsi:type="Time">
                     <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="541" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TupleEqTimeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Tuple">
               <element name="timeId">
                  <value valueType="t:Integer" value="55" xsi:type="Literal"/>
               </element>
               <element name="TheTime">
                  <value xsi:type="Time">
                     <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="541" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="timeId">
                  <value valueType="t:Integer" value="55" xsi:type="Literal"/>
               </element>
               <element name="TheTime">
                  <value xsi:type="Time">
                     <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="540" xsi:type="Literal"/>
                  </value>
               </element>
            </operand>
         </expression>
      </def>
      <def name="ListEqEmptyEmpty" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="List"/>
            <operand xsi:type="List"/>
         </expression>
      </def>
      <def name="ListEqABCABC" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ListEqABCAB" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ListEqABC123" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:Integer" value="1" xsi:type="Literal"/>
               <element valueType="t:Integer" value="2" xsi:type="Literal"/>
               <element valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ListEq123ABC" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="List">
               <element valueType="t:Integer" value="1" xsi:type="Literal"/>
               <element valueType="t:Integer" value="2" xsi:type="Literal"/>
               <element valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ListEq123String123" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="List">
               <element valueType="t:Integer" value="1" xsi:type="Literal"/>
               <element valueType="t:Integer" value="2" xsi:type="Literal"/>
               <element valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="1" xsi:type="Literal"/>
               <element valueType="t:String" value="2" xsi:type="Literal"/>
               <element valueType="t:String" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="IntervalEq1To101To10" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="IntervalEq1To101To5" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEqTodayToday" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Today"/>
            <operand xsi:type="Today"/>
         </expression>
      </def>
      <def name="DateTimeEqTodayYesterday" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Today"/>
            <operand xsi:type="Subtract">
               <operand xsi:type="Today"/>
               <operand value="1" unit="days" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEqJanJan" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               <timezoneOffset xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </timezoneOffset>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               <timezoneOffset xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </timezoneOffset>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEqJanJuly" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               <timezoneOffset xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </timezoneOffset>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="7" xsi:type="Literal"/>
               <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               <timezoneOffset xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </timezoneOffset>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEqNull" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="DateTime">
               <year asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </year>
            </operand>
            <operand xsi:type="DateTime">
               <year asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </year>
            </operand>
         </expression>
      </def>
      <def name="DateTimeUTC" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="14" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="30" xsi:type="Literal"/>
               <second valueType="t:Integer" value="14" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="559" xsi:type="Literal"/>
               <timezoneOffset valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="14" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="30" xsi:type="Literal"/>
               <second valueType="t:Integer" value="14" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="559" xsi:type="Literal"/>
               <timezoneOffset valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeEq10A10A" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeEq10A10P" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterZZ" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterZ1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterDecZZ" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterDecZ1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterDecZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterCM0CM0" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterCM0CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterCM0NegCM1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand xsi:type="Negate">
               <operand value="1" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterM1CM10" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="10" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterAA" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterAB" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterBA" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterAThanAA" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterAAThanA" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterJackJill" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand valueType="t:String" value="Jack" xsi:type="Literal"/>
            <operand valueType="t:String" value="Jill" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DateTimeGreaterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeGreaterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="13" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeGreaterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeGreaterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyGreaterNull" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyGreaterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2015" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyGreaterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Greater">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterOrEqualZZ" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualZ1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterOrEqualDecZZ" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualDecZ1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualDecZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterOrEqualCM0CM0" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterOrEqualCM0CM1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterOrEqualCM0NegCM1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand xsi:type="Negate">
               <operand value="1" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="GreaterOrEqualM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterOrEqualM1CM10" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="10" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="GreaterOrEqualAA" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualAB" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualBA" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualAThanAA" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualAAThanA" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="GreaterOrEqualJackJill" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand valueType="t:String" value="Jack" xsi:type="Literal"/>
            <operand valueType="t:String" value="Jill" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DateTimeGreaterEqTrue" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="10" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeGreaterEqTrue2" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeGreaterEqFalse" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="13" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeGreaterEqTrue" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeGreaterEqTrue2" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeGreaterEqFalse" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyGreaterEqualNull" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyGreaterEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2015" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyGreaterEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LessZZ" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessZ1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LessDecZZ" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessDecZ1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessDecZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LessCM0CM0" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessCM0CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessCM0NegCM1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand xsi:type="Negate">
               <operand value="1" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="LessM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessM1CM10" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="10" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessAA" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessAB" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessBA" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessAThanAA" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessAAThanA" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessJackJill" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand valueType="t:String" value="Jack" xsi:type="Literal"/>
            <operand valueType="t:String" value="Jill" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DateTimeLessTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="9" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeLessFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="14" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="13" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeLessTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeLessFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="10" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyLessNull" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyLessTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyLessFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Less">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2015" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LessOrEqualZZ" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualZ1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LessOrEqualDecZZ" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualDecZ1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualDecZNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LessOrEqualCM0CM0" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessOrEqualCM0CM1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessOrEqualCM0NegCM1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand value="0" unit="cm" xsi:type="Quantity"/>
            <operand xsi:type="Negate">
               <operand value="1" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="LessOrEqualM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessOrEqualM1CM10" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand value="1" unit="m" xsi:type="Quantity"/>
            <operand value="10" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="LessOrEqualAA" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualAB" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualBA" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualAThanAA" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualAAThanA" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:String" value="aa" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LessOrEqualJackJill" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand valueType="t:String" value="Jack" xsi:type="Literal"/>
            <operand valueType="t:String" value="Jill" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DateTimeLessEqTrue" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="9" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="10" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeLessEqTrue2" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeLessEqFalse" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeLessEqTrue" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeLessEqTrue2" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeLessEqFalse" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyLessEqualNull" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyLessEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="UncertaintyLessEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="LessOrEqual">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2015" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2014" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivTrueTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivTrueFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivFalseFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivFalseTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivNullNull" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Null"/>
            <operand xsi:type="Null"/>
         </expression>
      </def>
      <def name="EquivNullTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand asType="t:Boolean" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
            </operand>
            <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivInt1Int1" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivInt1Int2" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivStringAStringA" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivStringAStringB" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:String" value="a" xsi:type="Literal"/>
            <operand valueType="t:String" value="b" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivFloat1Float1" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivFloat1Float2" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivFloat1Int1" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivFloat1Int2" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="EquivEqCM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand value="1" unit="cm" xsi:type="Quantity"/>
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="EquivEqCM1M01" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand value="1" unit="cm" xsi:type="Quantity"/>
            <operand value="0.01" unit="m" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="EquivTupleJohnJohn" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="EquivTupleJohnJane" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="2" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="Jane" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="EquivTupleJohn1John2" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="1" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
            <operand xsi:type="Tuple">
               <element name="Id">
                  <value valueType="t:Integer" value="2" xsi:type="Literal"/>
               </element>
               <element name="Name">
                  <value valueType="t:String" value="John" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="EquivListEmptyEmpty" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="List"/>
            <operand xsi:type="List"/>
         </expression>
      </def>
      <def name="EquivListABCABC" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivListABCAB" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivListABC123" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:Integer" value="1" xsi:type="Literal"/>
               <element valueType="t:Integer" value="2" xsi:type="Literal"/>
               <element valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivList123ABC" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="List">
               <element valueType="t:Integer" value="1" xsi:type="Literal"/>
               <element valueType="t:Integer" value="2" xsi:type="Literal"/>
               <element valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="a" xsi:type="Literal"/>
               <element valueType="t:String" value="b" xsi:type="Literal"/>
               <element valueType="t:String" value="c" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivList123String123" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="List">
               <element valueType="t:Integer" value="1" xsi:type="Literal"/>
               <element valueType="t:Integer" value="2" xsi:type="Literal"/>
               <element valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="List">
               <element valueType="t:String" value="1" xsi:type="Literal"/>
               <element valueType="t:String" value="2" xsi:type="Literal"/>
               <element valueType="t:String" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivInterval1To101To10" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivInterval1To101To5" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivDateTimeTodayToday" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Today"/>
            <operand xsi:type="Today"/>
         </expression>
      </def>
      <def name="EquivDateTimeTodayYesterday" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Today"/>
            <operand xsi:type="Subtract">
               <operand xsi:type="Today"/>
               <operand value="1" unit="days" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="EquivTime10A10A" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="EquivTime10A10P" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqTrueTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
               <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqTrueFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
               <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqFalseFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
               <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqFalseTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Boolean" value="false" xsi:type="Literal"/>
               <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqNullNull" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Null"/>
               <operand xsi:type="Null"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqNullTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand asType="t:Boolean" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
               </operand>
               <operand valueType="t:Boolean" value="true" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqInt1Int1" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqInt1Int2" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqStringAStringA" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:String" value="a" xsi:type="Literal"/>
               <operand valueType="t:String" value="a" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqStringAStringB" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:String" value="a" xsi:type="Literal"/>
               <operand valueType="t:String" value="b" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqFloat1Float1" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqFloat1Float2" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqFloat1Int1" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               <operand xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="SimpleNotEqFloat1Int2" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               <operand xsi:type="ToDecimal">
                  <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="QuantityNotEqCM1CM1" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand value="1" unit="cm" xsi:type="Quantity"/>
               <operand value="1" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityNotEqCM1M01" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand value="1" unit="cm" xsi:type="Quantity"/>
               <operand value="0.01" unit="m" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="TupleNotEqJohnJohn" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Tuple">
                  <element name="Id">
                     <value valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </element>
                  <element name="Name">
                     <value valueType="t:String" value="John" xsi:type="Literal"/>
                  </element>
               </operand>
               <operand xsi:type="Tuple">
                  <element name="Id">
                     <value valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </element>
                  <element name="Name">
                     <value valueType="t:String" value="John" xsi:type="Literal"/>
                  </element>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TupleNotEqJohnJane" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Tuple">
                  <element name="Id">
                     <value valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </element>
                  <element name="Name">
                     <value valueType="t:String" value="John" xsi:type="Literal"/>
                  </element>
               </operand>
               <operand xsi:type="Tuple">
                  <element name="Id">
                     <value valueType="t:Integer" value="2" xsi:type="Literal"/>
                  </element>
                  <element name="Name">
                     <value valueType="t:String" value="Jane" xsi:type="Literal"/>
                  </element>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TupleNotEqJohn1John2" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Tuple">
                  <element name="Id">
                     <value valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </element>
                  <element name="Name">
                     <value valueType="t:String" value="John" xsi:type="Literal"/>
                  </element>
               </operand>
               <operand xsi:type="Tuple">
                  <element name="Id">
                     <value valueType="t:Integer" value="2" xsi:type="Literal"/>
                  </element>
                  <element name="Name">
                     <value valueType="t:String" value="John" xsi:type="Literal"/>
                  </element>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="ListNotEqEmptyEmpty" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="List"/>
               <operand xsi:type="List"/>
            </operand>
         </expression>
      </def>
      <def name="ListNotEqABCABC" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="List">
                  <element valueType="t:String" value="a" xsi:type="Literal"/>
                  <element valueType="t:String" value="b" xsi:type="Literal"/>
                  <element valueType="t:String" value="c" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="List">
                  <element valueType="t:String" value="a" xsi:type="Literal"/>
                  <element valueType="t:String" value="b" xsi:type="Literal"/>
                  <element valueType="t:String" value="c" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="ListNotEqABCAB" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="List">
                  <element valueType="t:String" value="a" xsi:type="Literal"/>
                  <element valueType="t:String" value="b" xsi:type="Literal"/>
                  <element valueType="t:String" value="c" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="List">
                  <element valueType="t:String" value="a" xsi:type="Literal"/>
                  <element valueType="t:String" value="b" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="ListNotEqABC123" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="List">
                  <element valueType="t:String" value="a" xsi:type="Literal"/>
                  <element valueType="t:String" value="b" xsi:type="Literal"/>
                  <element valueType="t:String" value="c" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="List">
                  <element valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <element valueType="t:Integer" value="2" xsi:type="Literal"/>
                  <element valueType="t:Integer" value="3" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="ListNotEq123ABC" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="List">
                  <element valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <element valueType="t:Integer" value="2" xsi:type="Literal"/>
                  <element valueType="t:Integer" value="3" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="List">
                  <element valueType="t:String" value="a" xsi:type="Literal"/>
                  <element valueType="t:String" value="b" xsi:type="Literal"/>
                  <element valueType="t:String" value="c" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="ListNotEq123String123" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="List">
                  <element valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <element valueType="t:Integer" value="2" xsi:type="Literal"/>
                  <element valueType="t:Integer" value="3" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="List">
                  <element valueType="t:String" value="1" xsi:type="Literal"/>
                  <element valueType="t:String" value="2" xsi:type="Literal"/>
                  <element valueType="t:String" value="3" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="IntervalNotEq1To101To10" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="10" xsi:type="Literal"/>
               </operand>
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="10" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="IntervalNotEq1To101To5" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="10" xsi:type="Literal"/>
               </operand>
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="5" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="DateTimeNotEqTodayToday" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Today"/>
               <operand xsi:type="Today"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeNotEqTodayYesterday" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Today"/>
               <operand xsi:type="Subtract">
                  <operand xsi:type="Today"/>
                  <operand value="1" unit="days" xsi:type="Quantity"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TimeNotEq10A10A" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TimeNotEq10A10P" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </operand>
               <operand xsi:type="Time">
                  <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
   </statements>
</library>


