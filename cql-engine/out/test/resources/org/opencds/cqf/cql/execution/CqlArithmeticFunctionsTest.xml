<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="ArithmeticFunctions" version="1"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
   </usings>
   <statements>
      <def name="Patient" context="Population">
         <expression xsi:type="Null"/>
      </def>
      <def name="AbsNull" context="Population" accessLevel="Public">
         <expression xsi:type="Abs">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Abs0" context="Population" accessLevel="Public">
         <expression xsi:type="Abs">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="AbsNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Abs">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="AbsNeg1Dec" context="Population" accessLevel="Public">
         <expression xsi:type="Abs">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Abs0Dec" context="Population" accessLevel="Public">
         <expression xsi:type="Abs">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Abs1cm" context="Population" accessLevel="Public">
         <expression xsi:type="Abs">
            <operand xsi:type="Negate">
               <operand value="1.0" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="AddNull" context="Population" accessLevel="Public">
         <expression xsi:type="Add">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand asType="t:Integer" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Add11" context="Population" accessLevel="Public">
         <expression xsi:type="Add">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Add1D1D" context="Population" accessLevel="Public">
         <expression xsi:type="Add">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Add1Q1Q" context="Population" accessLevel="Public">
         <expression xsi:type="Add">
            <operand value="1" unit="g/cm3" xsi:type="Quantity"/>
            <operand value="1" unit="g/cm3" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="AddIAndD" context="Population" accessLevel="Public">
         <expression xsi:type="Add">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="CeilingNull" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Ceiling1D" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Ceiling1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="CeilingNegD1" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="0.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="CeilingNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="CeilingNeg1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Ceiling1I" context="Population" accessLevel="Public">
         <expression xsi:type="Ceiling">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DivideNull" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Divide10" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Divide01" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Divide11" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Divide1d1d" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Divide103" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Divide1Q1" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand value="1" unit="g/cm3" xsi:type="Quantity"/>
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Divide1Q1Q" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand value="1" unit="g/cm3" xsi:type="Quantity"/>
            <operand value="1" unit="g/cm3" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="Divide10I5D" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="5.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Divide10I5I" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Divide10Q5I" context="Population" accessLevel="Public">
         <expression xsi:type="Divide">
            <operand value="10.0" unit="g" xsi:type="Quantity"/>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="FloorNull" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Floor1" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Floor1D" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Floor1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="FloorNegD1" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="0.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="FloorNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="FloorNeg1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Floor2I" context="Population" accessLevel="Public">
         <expression xsi:type="Floor">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ExpNull" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Exp0" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ExpNeg0" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand xsi:type="ToDecimal">
               <operand xsi:type="Negate">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="Exp1" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ExpNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand xsi:type="ToDecimal">
               <operand xsi:type="Negate">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="Exp1000" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1000" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Exp1000D" context="Population" accessLevel="Public">
         <expression xsi:type="Exp">
            <operand valueType="t:Decimal" value="1000.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="LogNullNull" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
            <operand asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Log1BaseNull" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Log1Base1" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Log1Base2" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Log1Base100" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="100" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Log16Base2" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="16" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LogD125Base2" context="Population" accessLevel="Public">
         <expression xsi:type="Log">
            <operand valueType="t:Decimal" value="0.125" xsi:type="Literal"/>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LnNull" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand asType="t:Decimal" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Ln0" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LnNeg0" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand xsi:type="ToDecimal">
               <operand xsi:type="Negate">
                  <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="Ln1" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="LnNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand xsi:type="ToDecimal">
               <operand xsi:type="Negate">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="Ln1000" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1000" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Ln1000D" context="Population" accessLevel="Public">
         <expression xsi:type="Ln">
            <operand valueType="t:Decimal" value="1000.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerMinValue" context="Population" accessLevel="Public">
         <expression valueType="t:Integer" xsi:type="MinValue"/>
      </def>
      <def name="DecimalMinValue" context="Population" accessLevel="Public">
         <expression valueType="t:Decimal" xsi:type="MinValue"/>
      </def>
      <def name="QuantityMinValue" context="Population" accessLevel="Public">
         <expression valueType="t:Quantity" xsi:type="MinValue"/>
      </def>
      <def name="DateTimeMinValue" context="Population" accessLevel="Public">
         <expression valueType="t:DateTime" xsi:type="MinValue"/>
      </def>
      <def name="TimeMinValue" context="Population" accessLevel="Public">
         <expression valueType="t:Time" xsi:type="MinValue"/>
      </def>
      <def name="IntegerMaxValue" context="Population" accessLevel="Public">
         <expression valueType="t:Integer" xsi:type="MaxValue"/>
      </def>
      <def name="DecimalMaxValue" context="Population" accessLevel="Public">
         <expression valueType="t:Decimal" xsi:type="MaxValue"/>
      </def>
      <def name="QuantityMaxValue" context="Population" accessLevel="Public">
         <expression valueType="t:Quantity" xsi:type="MaxValue"/>
      </def>
      <def name="DateTimeMaxValue" context="Population" accessLevel="Public">
         <expression valueType="t:DateTime" xsi:type="MaxValue"/>
      </def>
      <def name="TimeMaxValue" context="Population" accessLevel="Public">
         <expression valueType="t:Time" xsi:type="MaxValue"/>
      </def>
      <def name="ModuloNull" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand asType="t:Integer" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Modulo0By0" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Modulo4By2" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Integer" value="4" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Modulo4DBy2D" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Modulo10By3" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Modulo10DBy3D" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Decimal" value="10.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Modulo10IBy3D" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="ModuloDResult" context="Population" accessLevel="Public">
         <expression xsi:type="Modulo">
            <operand valueType="t:Decimal" value="3.5" xsi:type="Literal"/>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="MultiplyNull" context="Population" accessLevel="Public">
         <expression xsi:type="Multiply">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand asType="t:Integer" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Multiply1By1" context="Population" accessLevel="Public">
         <expression xsi:type="Multiply">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Multiply1DBy2D" context="Population" accessLevel="Public">
         <expression xsi:type="Multiply">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Multiply1IBy2D" context="Population" accessLevel="Public">
         <expression xsi:type="Multiply">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Multiply1CMBy2CM" context="Population" accessLevel="Public">
         <expression xsi:type="Multiply">
            <operand value="1.0" unit="cm" xsi:type="Quantity"/>
            <operand value="2.0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="NegateNull" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Negate0" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="NegateNeg0" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Negate1" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="NegateNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Negate0D" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="NegateNeg0D" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Negate1D" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="NegateNeg1D" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Negate1CM" context="Population" accessLevel="Public">
         <expression xsi:type="Negate">
            <operand value="1" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="PredecessorNull" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="PredecessorOf0" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="PredecessorOf1" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="PredecessorOf1D" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="PredecessorOf101D" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand valueType="t:Decimal" value="1.01" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="PredecessorOf1QCM" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand value="1.0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="PredecessorOfJan12000" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2000" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="PredecessorOfNoon" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="PredecessorUnderflowDt" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="0001" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="PredecessorUnderflowT" context="Population" accessLevel="Public">
         <expression xsi:type="Predecessor">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="PowerNullToNull" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Power0To0" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Power2To2" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="PowerNeg2To2" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Power2ToNeg2" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Power2DTo2D" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="PowerNeg2DTo2D" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Power2DToNeg2D" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Power2DTo2" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Power2To2D" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Power2To4" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="4" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Power2DTo4D" context="Population" accessLevel="Public">
         <expression xsi:type="Power">
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="RoundNull" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Round1" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Round0D5" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand valueType="t:Decimal" value="0.5" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Round0D4" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand valueType="t:Decimal" value="0.4" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Round3D14159" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand valueType="t:Decimal" value="3.14159" xsi:type="Literal"/>
            <precision valueType="t:Integer" value="2" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="RoundNeg0D5" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="0.5" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="RoundNeg0D4" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="0.4" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="RoundNeg0D6" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="0.6" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="RoundNeg1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="RoundNeg1D5" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.5" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="RoundNeg1D6" context="Population" accessLevel="Public">
         <expression xsi:type="Round">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.6" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SubtractNull" context="Population" accessLevel="Public">
         <expression xsi:type="Subtract">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand asType="t:Integer" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Subtract1And1" context="Population" accessLevel="Public">
         <expression xsi:type="Subtract">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Subtract1DAnd2D" context="Population" accessLevel="Public">
         <expression xsi:type="Subtract">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Subtract1CMAnd2CM" context="Population" accessLevel="Public">
         <expression xsi:type="Subtract">
            <operand value="1.0" unit="cm" xsi:type="Quantity"/>
            <operand value="2.0" unit="cm" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="Subtract2And11D" context="Population" accessLevel="Public">
         <expression xsi:type="Subtract">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SuccessorNull" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="SuccessorOf0" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SuccessorOf1" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SuccessorOf1D" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SuccessorOf101D" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand valueType="t:Decimal" value="1.01" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="SuccessorOfJan12000" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2000" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SuccessorOfNoon" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SuccessorOverflowDt" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="9999" xsi:type="Literal"/>
               <month valueType="t:Integer" value="12" xsi:type="Literal"/>
               <day valueType="t:Integer" value="31" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="23" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="SuccessorOverflowT" context="Population" accessLevel="Public">
         <expression xsi:type="Successor">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="23" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncateNull" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Decimal" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="Truncate0" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Truncate0D0" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand valueType="t:Decimal" value="0.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Truncate0D1" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand valueType="t:Decimal" value="0.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Truncate1" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Truncate1D0" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Truncate1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Truncate1D9" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand valueType="t:Decimal" value="1.9" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncateNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand xsi:type="ToDecimal">
               <operand xsi:type="Negate">
                  <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TruncateNeg1D0" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncateNeg1D1" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncateNeg1D9" context="Population" accessLevel="Public">
         <expression xsi:type="Truncate">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="1.9" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivideNull" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
            <operand strict="false" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivide2By1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncatedDivide10By3" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncatedDivide10d1By3D1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand valueType="t:Decimal" value="10.1" xsi:type="Literal"/>
            <operand valueType="t:Decimal" value="3.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncatedDivideNeg2ByNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivideNeg10ByNeg3" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivideNeg10d1ByNeg3D1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="10.1" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="3.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivideNeg2By1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncatedDivideNeg10By3" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncatedDivideNeg10d1By3D1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="10.1" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="3.1" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TruncatedDivide2ByNeg1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand valueType="t:Integer" value="2" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivide10ByNeg3" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Integer" value="3" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivide10d1ByNeg3D1" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand valueType="t:Decimal" value="10.1" xsi:type="Literal"/>
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="3.1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TruncatedDivide10By5D" context="Population" accessLevel="Public">
         <expression xsi:type="TruncatedDivide">
            <operand xsi:type="ToDecimal">
               <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Decimal" value="5.0" xsi:type="Literal"/>
         </expression>
      </def>
   </statements>
</library>


