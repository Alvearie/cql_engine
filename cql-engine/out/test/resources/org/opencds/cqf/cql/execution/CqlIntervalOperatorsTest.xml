<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="CqlIntervalOperatorsTest" version="1"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
   </usings>
   <statements>
      <def name="Patient" context="Population">
         <expression xsi:type="Null"/>
      </def>
      <def name="IntegerIntervalTest" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Integer" value="1" xsi:type="Literal"/>
            <high valueType="t:Integer" value="10" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TestAfterNull" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand xsi:type="Null"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalTest2" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Integer" value="11" xsi:type="Literal"/>
            <high valueType="t:Integer" value="20" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalPointAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand valueType="t:Integer" value="12" xsi:type="Literal"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalPointAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand valueType="t:Integer" value="9" xsi:type="Literal"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalAfterPointTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalAfterPointFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            <operand valueType="t:Integer" value="12" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalTest2" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Decimal" value="11.0" xsi:type="Literal"/>
            <high valueType="t:Decimal" value="20.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalTest" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            <high valueType="t:Decimal" value="10.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalPointAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand valueType="t:Decimal" value="12.0" xsi:type="Literal"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalPointAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand valueType="t:Decimal" value="9.0" xsi:type="Literal"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalAfterPointTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand valueType="t:Decimal" value="5.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalAfterPointFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand valueType="t:Decimal" value="12.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="QuantityIntervalTest2" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low value="11.0" unit="g" xsi:type="Quantity"/>
            <high value="20.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalTest" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low value="1.0" unit="g" xsi:type="Quantity"/>
            <high value="10.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalPointAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand value="12.0" unit="g" xsi:type="Quantity"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalPointAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand value="9.0" unit="g" xsi:type="Quantity"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalAfterPointTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand value="5.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalAfterPointFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand value="12.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="DateTimeAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2011" xsi:type="Literal"/>
               <month valueType="t:Integer" value="12" xsi:type="Literal"/>
               <day valueType="t:Integer" value="31" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="12" xsi:type="Literal"/>
               <day valueType="t:Integer" value="31" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="After">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="17" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestBeforeNull" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand xsi:type="Null"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalPointBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand valueType="t:Integer" value="9" xsi:type="Literal"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalPointBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand valueType="t:Integer" value="9" xsi:type="Literal"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalBeforePointTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Integer" value="11" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalBeforePointFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Integer" value="8" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalPointBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand valueType="t:Decimal" value="9.0" xsi:type="Literal"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalPointBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand valueType="t:Decimal" value="9.0" xsi:type="Literal"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalBeforePointTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Decimal" value="11.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalBeforePointFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="QuantityIntervalBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalPointBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand value="12.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalPointBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand value="9.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalBeforePointTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand value="5.0" unit="g" xsi:type="Quantity"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalBeforePointFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand value="12.0" unit="g" xsi:type="Quantity"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="2" xsi:type="Literal"/>
               <day valueType="t:Integer" value="27" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2011" xsi:type="Literal"/>
               <month valueType="t:Integer" value="12" xsi:type="Literal"/>
               <day valueType="t:Integer" value="31" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Before">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestCollapseNull" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="false" highClosed="false" xsi:type="Interval">
                  <low xsi:type="Null"/>
                  <high xsi:type="Null"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalCollapse" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="5" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="3" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="7" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="19" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="7" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="10" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalCollapse2" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="2" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="3" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="7" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="19" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="7" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="10" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalCollapse3" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="6" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Integer" value="7" xsi:type="Literal"/>
                  <high valueType="t:Integer" value="8" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalCollapse" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
                  <high valueType="t:Decimal" value="5.0" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
                  <high valueType="t:Decimal" value="7.0" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Decimal" value="12.0" xsi:type="Literal"/>
                  <high valueType="t:Decimal" value="19.0" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Decimal" value="7.0" xsi:type="Literal"/>
                  <high valueType="t:Decimal" value="10.0" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalCollapse2" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
                  <high valueType="t:Decimal" value="6.0" xsi:type="Literal"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low valueType="t:Decimal" value="6.00000001" xsi:type="Literal"/>
                  <high valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalCollapse" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low value="1.0" unit="g" xsi:type="Quantity"/>
                  <high value="5.0" unit="g" xsi:type="Quantity"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low value="3.0" unit="g" xsi:type="Quantity"/>
                  <high value="7.0" unit="g" xsi:type="Quantity"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low value="12.0" unit="g" xsi:type="Quantity"/>
                  <high value="19.0" unit="g" xsi:type="Quantity"/>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low value="7.0" unit="g" xsi:type="Quantity"/>
                  <high value="10.0" unit="g" xsi:type="Quantity"/>
               </element>
            </operand>
         </expression>
      </def>
      <def name="DateTimeCollapse" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="10" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="10" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="20" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="30" xsi:type="Literal"/>
                  </high>
               </element>
            </operand>
         </expression>
      </def>
      <def name="DateTimeCollapse2" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="1" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="16" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="5" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                  </high>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TimeCollapse" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="17" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="18" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TimeCollapse2" context="Population" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="List">
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </element>
               <element lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="11" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </element>
            </operand>
         </expression>
      </def>
      <def name="TestContainsNull" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand asType="t:Integer" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="TestNullElement1" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </operand>
            <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TestNullElement2" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <high valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Integer" value="10" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalContainsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalContainsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Integer" value="25" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalContainsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Decimal" value="8.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalContainsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand valueType="t:Decimal" value="255.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="QuantityIntervalContainsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand value="2.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalContainsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand value="100.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="DateTimeContainsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeContainsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="16" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeContainsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TimeContainsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalEnd" context="Population" accessLevel="Public">
         <expression xsi:type="End">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalEnd" context="Population" accessLevel="Public">
         <expression xsi:type="End">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalEnd" context="Population" accessLevel="Public">
         <expression xsi:type="End">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeIntervalTest" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low xsi:type="DateTime">
               <year valueType="t:Integer" value="2016" xsi:type="Literal"/>
               <month valueType="t:Integer" value="5" xsi:type="Literal"/>
               <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </low>
            <high xsi:type="DateTime">
               <year valueType="t:Integer" value="2016" xsi:type="Literal"/>
               <month valueType="t:Integer" value="5" xsi:type="Literal"/>
               <day valueType="t:Integer" value="2" xsi:type="Literal"/>
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </high>
         </expression>
      </def>
      <def name="DateTimeIntervalEnd" context="Population" accessLevel="Public">
         <expression xsi:type="End">
            <operand name="DateTimeIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="TimeIntervalTest" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low xsi:type="Time">
               <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
               <second valueType="t:Integer" value="0" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
            </low>
            <high xsi:type="Time">
               <hour valueType="t:Integer" value="23" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="599" xsi:type="Literal"/>
            </high>
         </expression>
      </def>
      <def name="TimeIntervalEnd" context="Population" accessLevel="Public">
         <expression xsi:type="End">
            <operand name="TimeIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="TestEndsNull" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand path="low" xsi:type="Property">
                     <source lowClosed="false" highClosed="false" xsi:type="Interval">
                        <low xsi:type="Null"/>
                        <high xsi:type="Null"/>
                     </source>
                  </operand>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <lowClosedExpression path="lowClosed" xsi:type="Property">
                  <source lowClosed="false" highClosed="false" xsi:type="Interval">
                     <low xsi:type="Null"/>
                     <high xsi:type="Null"/>
                  </source>
               </lowClosedExpression>
               <high asType="t:Integer" xsi:type="As">
                  <operand path="high" xsi:type="Property">
                     <source lowClosed="false" highClosed="false" xsi:type="Interval">
                        <low xsi:type="Null"/>
                        <high xsi:type="Null"/>
                     </source>
                  </operand>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </high>
               <highClosedExpression path="highClosed" xsi:type="Property">
                  <source lowClosed="false" highClosed="false" xsi:type="Interval">
                     <low xsi:type="Null"/>
                     <high xsi:type="Null"/>
                  </source>
               </highClosedExpression>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalTest4" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Integer" value="4" xsi:type="Literal"/>
            <high valueType="t:Integer" value="10" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalEndsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalTest3" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Integer" value="44" xsi:type="Literal"/>
            <high valueType="t:Integer" value="50" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalEndsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalTest3" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            <high valueType="t:Decimal" value="10.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalEndsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalEndsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalTest3" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low value="5.0" unit="g" xsi:type="Quantity"/>
            <high value="10.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalEndsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalEndsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeEndsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEndsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeEndsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeEndsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Ends">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="11" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestEqualNull" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand lowClosed="false" highClosed="false" xsi:type="Interval">
               <low xsi:type="Null"/>
               <high xsi:type="Null"/>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
                  <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="58" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="NullInterval" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low xsi:type="Null"/>
            <high xsi:type="Null"/>
         </expression>
      </def>
      <def name="TestExceptNull" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalExcept1to3" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalExceptNull" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="3" xsi:type="Literal"/>
               <high valueType="t:Integer" value="7" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalExcept1to3" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalExceptNull" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="10.0" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="3.0" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="7.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalExcept1to4" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Except12" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="4" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="3" xsi:type="Literal"/>
               <high valueType="t:Integer" value="6" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="ExceptDateTime" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="ExceptDateTime2" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="12" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="ExceptTime" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="ExceptTime2" context="Population" accessLevel="Public">
         <expression xsi:type="Except">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="11" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestInNull" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
            <operand xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand path="low" xsi:type="Property">
                     <source name="NullInterval" xsi:type="ExpressionRef"/>
                  </operand>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <lowClosedExpression path="lowClosed" xsi:type="Property">
                  <source name="NullInterval" xsi:type="ExpressionRef"/>
               </lowClosedExpression>
               <high asType="t:Integer" xsi:type="As">
                  <operand path="high" xsi:type="Property">
                     <source name="NullInterval" xsi:type="ExpressionRef"/>
                  </operand>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </high>
               <highClosedExpression path="highClosed" xsi:type="Property">
                  <source name="NullInterval" xsi:type="ExpressionRef"/>
               </highClosedExpression>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand valueType="t:Integer" value="5" xsi:type="Literal"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand valueType="t:Integer" value="500" xsi:type="Literal"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand valueType="t:Decimal" value="9.0" xsi:type="Literal"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand xsi:type="Negate">
               <operand valueType="t:Decimal" value="2.0" xsi:type="Literal"/>
            </operand>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand value="1.0" unit="g" xsi:type="Quantity"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand value="55.0" unit="g" xsi:type="Quantity"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="7" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="17" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeInNullTrue" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="1" xsi:type="Literal"/>
               <day valueType="t:Integer" value="7" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high asType="t:DateTime" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="7" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand xsi:type="Time">
               <hour valueType="t:Integer" value="17" xsi:type="Literal"/>
               <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
               <second valueType="t:Integer" value="59" xsi:type="Literal"/>
               <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeInNull" context="Population" accessLevel="Public">
         <expression xsi:type="In">
            <operand asType="t:Time" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Time" xsi:type="NamedTypeSpecifier"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestIncludesNull" context="Population" accessLevel="Public">
         <expression xsi:type="Contains">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand asType="t:Integer" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="4" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="6" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Includes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="4" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="6" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="IncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalIntersectTest4to10" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalIntersectTestNull" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalIntersectTest4to10" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalIntersectTestNull" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalIntersectTest5to10" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalIntersectTestNull" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeIntersect" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="10" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeIntersect" context="Population" accessLevel="Public">
         <expression xsi:type="Intersect">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="6" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalEquivalentTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalEquivalentFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalEquivalentTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalEquivalentFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalEquivalentTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalEquivalentFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeEquivalentTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeEquivalentFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeEquivalentTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeEquivalentFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Equivalent">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="58" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestMeetsNull" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="false" highClosed="true" xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <high valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="false" highClosed="false" xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <high valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalMeetsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalMeetsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalMeetsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="3.01" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="5.00000001" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="5.00000002" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="8.50" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalMeetsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="3.01" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="5.00000001" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="5.5" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="8.50" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalMeetsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="3.01" unit="g" xsi:type="Quantity"/>
               <high value="5.00000001" unit="g" xsi:type="Quantity"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="5.00000002" unit="g" xsi:type="Quantity"/>
               <high value="8.50" unit="g" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalMeetsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="3.01" unit="g" xsi:type="Quantity"/>
               <high value="5.00000001" unit="g" xsi:type="Quantity"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="5.5" unit="g" xsi:type="Quantity"/>
               <high value="8.50" unit="g" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeMeetsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeMeetsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="20" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeMeetsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeMeetsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestMeetsBeforeNull" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand lowClosed="false" highClosed="true" xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <high valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="false" highClosed="true" xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <high valueType="t:Integer" value="25" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalMeetsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalMeetsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalMeetsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="3.50000001" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="5.00000011" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="5.00000012" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="8.50" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalMeetsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="8.01" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="15.00000001" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="15.00000000" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="18.50" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalMeetsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="3.50000001" unit="g" xsi:type="Quantity"/>
               <high value="5.00000011" unit="g" xsi:type="Quantity"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="5.00000012" unit="g" xsi:type="Quantity"/>
               <high value="8.50" unit="g" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalMeetsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="8.01" unit="g" xsi:type="Quantity"/>
               <high value="15.00000001" unit="g" xsi:type="Quantity"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="15.00000000" unit="g" xsi:type="Quantity"/>
               <high value="18.50" unit="g" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeMeetsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeMeetsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="20" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeMeetsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeMeetsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestMeetsAfterNull" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand lowClosed="false" highClosed="true" xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <high valueType="t:Integer" value="5" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="false" xsi:type="Interval">
               <low valueType="t:Integer" value="11" xsi:type="Literal"/>
               <high asType="t:Integer" xsi:type="As">
                  <operand xsi:type="Null"/>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalMeetsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalMeetsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalMeetsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="55.00000123" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="128.032156" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="12.00258" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="55.00000122" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalMeetsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="55.00000124" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="150.222222" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="12.00258" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="55.00000122" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalMeetsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="55.00000123" unit="g" xsi:type="Quantity"/>
               <high value="128.032156" unit="g" xsi:type="Quantity"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="12.00258" unit="g" xsi:type="Quantity"/>
               <high value="55.00000122" unit="g" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalMeetsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="MeetsAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="55.00000124" unit="g" xsi:type="Quantity"/>
               <high value="150.222222" unit="g" xsi:type="Quantity"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="12.00258" unit="g" xsi:type="Quantity"/>
               <high value="55.00000122" unit="g" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeMeetsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeMeetsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="20" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="7" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="14" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeMeetsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeMeetsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Meets">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalNotEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
               <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalNotEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
               <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalNotEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
               <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalNotEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
               <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalNotEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
               <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="QuantityIntervalNotEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
               <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="DateTimeNotEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </high>
               </operand>
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="22" xsi:type="Literal"/>
                  </high>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="DateTimeNotEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </high>
               </operand>
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="15" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="DateTime">
                     <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                     <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                     <day valueType="t:Integer" value="25" xsi:type="Literal"/>
                     <hour valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </high>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TimeNotEqualTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </operand>
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TimeNotEqualFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Not">
            <operand xsi:type="Equal">
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </operand>
               <operand lowClosed="true" highClosed="true" xsi:type="Interval">
                  <low xsi:type="Time">
                     <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </low>
                  <high xsi:type="Time">
                     <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                     <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                     <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
                  </high>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterNull" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </high>
            </operand>
            <operand asType="t:DateTime" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterDateTrue" context="Population" accessLevel="Public">
         <expression precision="Month" xsi:type="SameOrAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="11" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterDateFalse" context="Population" accessLevel="Public">
         <expression precision="Month" xsi:type="SameOrAfter">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="11" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterTimeTrue" context="Population" accessLevel="Public">
         <expression precision="Hour" xsi:type="SameOrAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterTimeFalse" context="Population" accessLevel="Public">
         <expression precision="Hour" xsi:type="SameOrAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="11" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterIntegerTrue" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrAfter">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="6" xsi:type="Literal"/>
               <high valueType="t:Integer" value="10" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Integer" value="6" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TestOnOrAfterDecimalFalse" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrAfter">
            <operand valueType="t:Decimal" value="2.5" xsi:type="Literal"/>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="1.666" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="2.50000001" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrAfterQuantityTrue" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrAfter">
            <operand value="2.5" unit="mg" xsi:type="Quantity"/>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="1.666" unit="mg" xsi:type="Quantity"/>
               <high value="2.50000000" unit="mg" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeNull" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </high>
            </operand>
            <operand asType="t:DateTime" xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeDateTrue" context="Population" accessLevel="Public">
         <expression precision="Month" xsi:type="SameOrBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="11" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </high>
            </operand>
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="11" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeDateFalse" context="Population" accessLevel="Public">
         <expression precision="Month" xsi:type="SameOrBefore">
            <operand xsi:type="DateTime">
               <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
               <month valueType="t:Integer" value="11" xsi:type="Literal"/>
               <day valueType="t:Integer" value="15" xsi:type="Literal"/>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2013" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="1" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeTimeTrue" context="Population" accessLevel="Public">
         <expression precision="Hour" xsi:type="SameOrBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="7" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="9" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeTimeFalse" context="Population" accessLevel="Public">
         <expression precision="Hour" xsi:type="SameOrBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="8" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="11" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeIntegerTrue" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrBefore">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="4" xsi:type="Literal"/>
               <high valueType="t:Integer" value="6" xsi:type="Literal"/>
            </operand>
            <operand valueType="t:Integer" value="6" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="TestOnOrBeforeDecimalFalse" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrBefore">
            <operand valueType="t:Decimal" value="1.6667" xsi:type="Literal"/>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="1.666" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="2.50000001" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestOnOrBeforeQuantityTrue" context="Population" accessLevel="Public">
         <expression xsi:type="SameOrBefore">
            <operand value="1.666" unit="mg" xsi:type="Quantity"/>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="1.666" unit="mg" xsi:type="Quantity"/>
               <high value="2.50000000" unit="mg" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="TestOverlapsNull" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalOverlapsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalOverlapsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalOverlapsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalOverlapsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalOverlapsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalOverlapsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest2" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeOverlapsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeOverlapsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="26" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeOverlapsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeOverlapsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOverlapsBeforeNull" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalOverlapsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalOverlapsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalOverlapsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalOverlapsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalOverlapsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalOverlapsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsBefore">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeOverlapsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeOverlapsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="26" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeOverlapsBeforeTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeOverlapsBeforeFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestOverlapsAfterNull" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalTest5" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Integer" value="4" xsi:type="Literal"/>
            <high valueType="t:Integer" value="15" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="IntegerIntervalOverlapsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="IntegerIntervalTest5" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalOverlapsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalTest4" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Decimal" value="4.0" xsi:type="Literal"/>
            <high valueType="t:Decimal" value="15.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalOverlapsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="DecimalIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalOverlapsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalTest4" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low value="5.0" unit="g" xsi:type="Quantity"/>
            <high value="15.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalOverlapsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="QuantityIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalOverlapsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="OverlapsAfter">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeOverlapsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeOverlapsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="26" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeOverlapsAfterTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeOverlapsAfterFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Overlaps">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="19" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestPointFromNull" context="Population" accessLevel="Public">
         <expression xsi:type="PointFrom">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Null"/>
               <high xsi:type="Null"/>
            </operand>
         </expression>
      </def>
      <def name="TestPointFromInteger" context="Population" accessLevel="Public">
         <expression xsi:type="PointFrom">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Integer" value="1" xsi:type="Literal"/>
               <high valueType="t:Integer" value="1" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestPointFromDecimal" context="Population" accessLevel="Public">
         <expression xsi:type="PointFrom">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
               <high valueType="t:Decimal" value="1.0" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="TestPointFromQuantity" context="Population" accessLevel="Public">
         <expression xsi:type="PointFrom">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low value="1.0" unit="cm" xsi:type="Quantity"/>
               <high value="1.0" unit="cm" xsi:type="Quantity"/>
            </operand>
         </expression>
      </def>
      <def name="TestProperlyIncludesNull" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalProperlyIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalProperlyIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest5" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalProperlyIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalProperlyIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalProperlyIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalProperlyIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeProperlyIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="27" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeProperlyIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="29" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeProperlyIncludesTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="998" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeProperlyIncludesFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludes">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestProperlyIncludedInNull" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand xsi:type="Interval">
               <low asType="t:Integer" xsi:type="As">
                  <operand path="low" xsi:type="Property">
                     <source name="NullInterval" xsi:type="ExpressionRef"/>
                  </operand>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </low>
               <lowClosedExpression path="lowClosed" xsi:type="Property">
                  <source name="NullInterval" xsi:type="ExpressionRef"/>
               </lowClosedExpression>
               <high asType="t:Integer" xsi:type="As">
                  <operand path="high" xsi:type="Property">
                     <source name="NullInterval" xsi:type="ExpressionRef"/>
                  </operand>
                  <asTypeSpecifier name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </high>
               <highClosedExpression path="highClosed" xsi:type="Property">
                  <source name="NullInterval" xsi:type="ExpressionRef"/>
               </highClosedExpression>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalProperlyIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalProperlyIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="IntegerIntervalTest5" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalProperlyIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalProperlyIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="DecimalIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalProperlyIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalProperlyIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeProperlyIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="27" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeProperlyIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="16" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="29" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="15" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeProperlyIncludedInTrue" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="998" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeProperlyIncludedInFalse" context="Population" accessLevel="Public">
         <expression xsi:type="ProperIncludedIn">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="22" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="12" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="0" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="0" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="21" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalStart" context="Population" accessLevel="Public">
         <expression xsi:type="Start">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalStart" context="Population" accessLevel="Public">
         <expression xsi:type="Start">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalStart" context="Population" accessLevel="Public">
         <expression xsi:type="Start">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeIntervalStart" context="Population" accessLevel="Public">
         <expression xsi:type="Start">
            <operand name="DateTimeIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="TimeIntervalStart" context="Population" accessLevel="Public">
         <expression xsi:type="Start">
            <operand name="TimeIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="TestStartsNull" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalStartsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest5" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalStartsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalStartsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalStartsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalStartsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalStartsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeStartsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="27" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeStartsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="6" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="27" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeStartsTrue" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="17" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeStartsFalse" context="Population" accessLevel="Public">
         <expression xsi:type="Starts">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="4" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="17" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TestUnionNull" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="NullInterval" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalUnion1To15" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest5" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntegerIntervalUnionNull" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalUnion1To15" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DecimalIntervalTest5" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low valueType="t:Decimal" value="14.0" xsi:type="Literal"/>
            <high valueType="t:Decimal" value="15.0" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="DecimalIntervalUnionNull" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="DecimalIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="DecimalIntervalTest5" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalUnion1To15" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalTest5" context="Population" accessLevel="Public">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low value="14.0" unit="g" xsi:type="Quantity"/>
            <high value="15.0" unit="g" xsi:type="Quantity"/>
         </expression>
      </def>
      <def name="QuantityIntervalUnionNull" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand name="QuantityIntervalTest" xsi:type="ExpressionRef"/>
            <operand name="QuantityIntervalTest5" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeUnion" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="DateTimeUnionNull" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="27" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="28" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeUnion" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="10" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeUnionNull" context="Population" accessLevel="Public">
         <expression xsi:type="Union">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="16" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="20" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="IntegerIntervalTestWidth9" context="Population" accessLevel="Public">
         <expression xsi:type="Width">
            <operand name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="IntervalTestWidthNull" context="Population" accessLevel="Public">
         <expression xsi:type="Width">
            <operand xsi:type="As">
               <operand xsi:type="Null"/>
               <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                  <pointType name="t:Integer" xsi:type="NamedTypeSpecifier"/>
               </asTypeSpecifier>
            </operand>
         </expression>
      </def>
      <def name="DecimalIntervalTestWidth11" context="Population" accessLevel="Public">
         <expression xsi:type="Width">
            <operand name="DecimalIntervalTest4" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="QuantityIntervalTestWidth5" context="Population" accessLevel="Public">
         <expression xsi:type="Width">
            <operand name="QuantityIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="DateTimeWidth" context="Population" accessLevel="Public">
         <expression xsi:type="Width">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="5" xsi:type="Literal"/>
               </low>
               <high xsi:type="DateTime">
                  <year valueType="t:Integer" value="2012" xsi:type="Literal"/>
                  <month valueType="t:Integer" value="1" xsi:type="Literal"/>
                  <day valueType="t:Integer" value="25" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="TimeWidth" context="Population" accessLevel="Public">
         <expression xsi:type="Width">
            <operand lowClosed="true" highClosed="true" xsi:type="Interval">
               <low xsi:type="Time">
                  <hour valueType="t:Integer" value="5" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </low>
               <high xsi:type="Time">
                  <hour valueType="t:Integer" value="15" xsi:type="Literal"/>
                  <minute valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <second valueType="t:Integer" value="59" xsi:type="Literal"/>
                  <millisecond valueType="t:Integer" value="999" xsi:type="Literal"/>
               </high>
            </operand>
         </expression>
      </def>
      <def name="CollapseIntervalTestInteger" context="Population" accessLevel="Public">
         <expression xsi:type="List">
            <element name="IntegerIntervalTest" xsi:type="ExpressionRef"/>
            <element name="IntegerIntervalTest2" xsi:type="ExpressionRef"/>
            <element name="IntegerIntervalTest3" xsi:type="ExpressionRef"/>
         </expression>
      </def>
   </statements>
</library>


